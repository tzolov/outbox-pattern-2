spring.main.web-application-type=none

spring.jpa.hibernate.ddl-auto=create
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
# spring.datasource.username=postgres
# spring.datasource.password=postgres

spring.datasource.url=jdbc:postgresql://localhost:5434/shipmentdb?currentSchema=public
spring.datasource.username=postgresuser
spring.datasource.password=postgrespw

debezium.properties.schema.history.internal=io.debezium.relational.history.MemorySchemaHistory
debezium.properties.offset.storage=org.apache.kafka.connect.storage.MemoryOffsetBackingStore

my.uuid=${random.uuid}
debezium.properties.name=my-connector-${my.uuid}
debezium.properties.topic.prefix=my-topic-${my.uuid}

debezium.properties.database.server.id=85744

debezium.properties.key.converter.schemas.enable=false
debezium.properties.value.converter.schemas.enable=false

debezium.properties.connector.class=io.debezium.connector.postgresql.PostgresConnector
debezium.properties.database.user=postgresuser
debezium.properties.database.password=postgrespw
debezium.properties.database.dbname=orderdb
debezium.properties.database.hostname=localhost
debezium.properties.database.port=5433

debezium.properties.transforms=unwrap
debezium.properties.transforms.unwrap.type=io.debezium.transforms.ExtractNewRecordState
debezium.properties.transforms.unwrap.drop.tombstones=false
debezium.properties.transforms.unwrap.delete.handling.mode=rewrite
debezium.properties.transforms.unwrap.add.headers=op
debezium.properties.transforms.unwrap.add.fields=op


debezium.properties.table.include.list=public.outbox